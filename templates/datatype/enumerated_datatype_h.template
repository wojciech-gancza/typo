// WARNING: File generated automatically by 'typo'. 
//   copyright:       ${copyright}
//   generated from:  ${source_script_file_name} line ${source_script_file_line}
//   generated at:    ${timestamp}
// Do not modify manually outside spaces marked as manually added by programmer


#ifndef _${type_name.CAPITALIZE_ALL}_H_
#define _${type_name.CAPITALIZE_ALL}_H_

/* // comment to the type (manually added by programmer)
${user_code}
*/ // end of comment

// additional includes (manually added by programmer)
${user_code}
// end of additional includes

$> import typo_cpp_generator
class ${type_name.UppercaseCamel}
{
public:
    enum value_type {
        ${enumerated_values}
    };
    
    ${enumerated_type_default_constructor}
    
    ${enumerated_type_constructor}
    
    ${simple_type_copy_constructor}
    
    ${simple_type_assignment}
    
    ${enumerated_type_getter}
    
    ${enumerated_type_setter}
    
    // WARNING: this function is case sensitive and always return value, even
    // if string do not match. To be sure check the result cut comparing
    // its result of toString() method with the parameter value.
    static ${type_name.UppercaseCamel} fromString(const std::string & p_${type_name.lowercaseCamel});
    
    const char * toString() const
    {
        return m_${type_name.lowercaseCamel}Names[m_${type_name.lowercaseCamel}];
    }
    
    // additional methods (manually added by programmer)
    ${user_code}
    // end of additional methods

private:
    value_type m_${type_name.lowercaseCamel};
    
    static const char* m_${type_name.lowercaseCamel}Names[];
};

// additional inline methods (manually added by programmer)
${user_code}
// end of additional inline methods

#endif