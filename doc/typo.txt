<html>
  <head>
  </head>
  
  <body>
    <h1>TYPO</h1>
    (c) WGan 2021 [licence: MIT
    <h2>Overview</h2>]
Typo.py is a simple program generating source files which can be used in your
own projects. 
<ul>
  <li>easy to use</li>
  <li>extendable</li>
  <li>allow to place user code in generated files</li>
</li>  
  

It is build as an easy-to-extend system which can be customized by the end user
by adding its own classes and template files. 

Files are generated based of templates. Template is normal text file containing:
- list of definitions helping with generation like file name, location. 
  Here any additional information can be added to be used inside the 
  code generators. Definition made here is available by any called generator
- text - just a text to copy to the result file
- generator calls - each call is denoted as ${name}, where 'name' is name of 
  the generator class - ordinary Python class having method 'generate'
  
Main typo interpreter have two methods:
- define - allowing to add new definition or overwrite existing one. Function 
  takes two parameters: 
  - name - name of the filed
  - value - its value. Value can contain generator calls
  This function modifies context which is used by 'create' function
- generate - allowing to create output file with the generated code. This 
  function takes one parameter:
  - name of template file
  
Generator is a class which have one method
- generate - taking two parameters:
  - context - the collection of all definitions
  - output - object allowing to store generated text.
  This function can operate on context taking values and also adding or 
  modifying them.
  
Context is a class containing collection of all definitions. In context one 
can set the value and take the value.

Generator factory creates generator of given name. When such generator cannot 
be found - special generator returning context value of given name is 
returned. This allow to use set variables inside generated code without the 
need of preparing special generator each time new value should directly used
from settings. Such generator can have additional methods which could selected
by placing their name after the dot (as example: ${CLASS_NAME.lowercaseCamel}).

Running TYPO

Typo can be run as ordinary python script. It does not need any additinal 
packages. When command line parameter is provided - its content is interpreted
as list of TYPO commands. 

  </body>
</html>